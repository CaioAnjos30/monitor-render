from datetime import datetime, timedelta
import os
from monitor_planilha import enviar_telegram, salvar_log

ARQUIVO_ULTIMA_MODIFICACAO = 'ultima_modificacao.txt'
ARQUIVO_ULTIMA_EXECUCAO = 'ultima_execucao.txt'
DELAY_MINUTOS = 5  # tempo de inatividade para rodar automa√ß√£o

def ja_executou(horario_modificacao):
    if not os.path.exists(ARQUIVO_ULTIMA_EXECUCAO):
        return False
    with open(ARQUIVO_ULTIMA_EXECUCAO, 'r') as f:
        ultima_exec = f.read().strip()
    return ultima_exec == horario_modificacao

def main():
    if not os.path.exists(ARQUIVO_ULTIMA_MODIFICACAO):
        print("üü° Nenhuma modifica√ß√£o registrada ainda.")
        return

    with open(ARQUIVO_ULTIMA_MODIFICACAO, 'r') as f:
        conteudo = f.read().strip()

    if "|" not in conteudo:
        print("‚ùå Formato inv√°lido no arquivo de modifica√ß√£o.")
        return

    mod_str, status = conteudo.split("|")

    if status == "sim":
        print("‚è≠Ô∏è Modifica√ß√£o j√° processada.")
        return

    try:
        horario_mod = datetime.strptime(mod_str, "%d/%m/%Y %H:%M:%S")
    except ValueError:
        print("‚ùå Formato de data inv√°lido.")
        return

    agora = datetime.now()
    if agora - horario_mod >= timedelta(minutes=DELAY_MINUTOS):
        if ja_executou(mod_str):
            print("‚è±Ô∏è Automa√ß√£o j√° foi executada para essa modifica√ß√£o.")
            return

        # (Aqui entraria seu processamento principal futuro, tipo atualizar planilha/dash/etc)
        enviar_telegram("ü§ñ A automa√ß√£o foi executada com base na √∫ltima modifica√ß√£o da planilha.")
        salvar_log("Sistema", "automacao", f"Automa√ß√£o executada para modifica√ß√£o em {mod_str}")

        with open(ARQUIVO_ULTIMA_EXECUCAO, 'w') as f:
            f.write(mod_str)

        with open(ARQUIVO_ULTIMA_MODIFICACAO, 'w') as f:
            f.write(f"{mod_str}|sim")

        print("‚úÖ Automa√ß√£o executada com sucesso!")

    else:
        print("üïí Aguardando 5 minutos ap√≥s a modifica√ß√£o...")

if __name__ == "__main__":
    main()
